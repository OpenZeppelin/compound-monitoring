service: generated-service
configValidationMode: error
frameworkVersion: "3"

provider:
  name: defender
  stage: dev
  stackName: ctoken_monitor
  ssot: false

custom:
  config: ${file(../secrets.yml)}
  stackSecrets: ${self:custom.config.secrets.${self:provider.stackName}}

  # Configure this section and rename secret-example.yml to secrets.yml
  name: cToken Monitor

  # Contract Sentinel Settings
  monitored-addresses:
    - "0xe65cdB6479BaC1e22340E4E755fAE7E509EcD06c" # Compound Aave Token (cAAVE)
    - "0x6C8c6b02E7b2BE14d4fA6022Dfd6d75921D90E4E" # Compound Basic Attention Token (cBAT)
    - "0x70e36f6BF80a52b3B46b3aF8e106CC0ed743E8e4" # Compound Collateral (cCOMP)
    - "0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643" # Compound Dai (cDAI)
    - "0x7713DD9Ca933848F6819F38B8352D9A15EA73F67" # Compound Fei USD (cFEI)
    - "0xFAce851a4921ce59e912d19329929CE6da6EB0c7" # Compound Dai (cDAI)
    - "0x95b4eF2869eBD94BEb4eEE400a99824BF5DC325b" # Compound Maker (cMKR)
    - "0x158079Ee67Fce2f58472A96584A73C7Ab9AC95c1" # Compound Augur (cREP)
    - "0xF5DCe57282A584D2746FaF1593d3121Fcac444dC" # Compound Sai (cSAI)
    - "0x4B0181102A0112A2ef11AbEE5563bb4a3176c9d7" # Compound Sushi Token (cSUSHI)
    - "0x12392F67bdf24faE0AF363c24aC620a2f67DAd86" # Compound TrueUSD (cTUSD)
    - "0x35A18000230DA775CAc24873d00Ff85BccdeD550" # Compound Uniswap (cUNI)
    - "0x39AA39c021dfbaE8faC545936693aC917d5E7563" # Compound USD Coin (cUSDC)
    - "0x041171993284df560249B57358F931D9eB7b925D" # Compound Pax Dollar (cUSDP)
    - "0xf650C3d88D12dB855b8bf7D11Be6C55A4e07dCC9" # Compound USDT (cUSDT)
    - "0xC11b1268C1A384e55C48c2391d8d480264A3A7F4" # Compound Wrapped BTC (cWBTC)
    - "0xccF4429DB6322D5C611ee964527D42E5d685DD6a" # Compound Wrapped BTC (cWBTC2)
    - "0x80a2AE356fc9ef4305676f7a3E2Ed04e12C33946" # Compound yearn.finance (cYFI)
    - "0xB3319f5D18Bc0D84dD1b4825Dcde5d5f7266d407" # Compound 0x (cZRX)
  # Possible Defender networks: https://github.com/OpenZeppelin/defender-client/blob/master/packages/base/src/utils/network.ts
  monitored-network: mainnet

  # Comment out any secret that you do not want to be overwritten in Defender
  defenderSecrets:
    # Public Variables
    comptrollerAddress: "0x3d9819210A31b4961b30EF54bE2aeD79B9c9Cd3B"
    # Private variables pulled from external secrets.yml file
    discordWebhook: ${self:custom.stackSecrets.discordWebhook}

defender:
  key: ${self:custom.config.keys.api}
  secret: ${self:custom.config.keys.secret}

functions:
  autotask-1:
    name: ${self:custom.name} Serverless Autotask
    path: autotask-1
    trigger:
      type: schedule
      frequency: 525600000
    paused: false
    relayer: ${self:resources.Resources.relayers.relayer-1}

resources:
  Resources:
    policies:
      policy-1:
        gas-price-cap: 1000
        whitelist-receivers:
          - "0x0f06aB75c7DD497981b75CD82F6566e3a5CAd8f2"
        eip1559-pricing: true

    secrets:
      stack: ${self:custom.defenderSecrets}

    relayers:
      relayer-1:
        name: ${self:custom.name} Serverless Relay
        network: mainnet
        min-balance: 100000000000000000

    sentinels:
      sentinel-1:
        name: ${self:custom.name} Serverless Sentinel
        type: BLOCK
        addresses: ${self:custom.monitored-addresses}
        network: ${self:custom.monitored-network}
        abi: ${file(abis/sentinel-1.json.abi)}
        paused: false
        autotask-trigger: ${self:functions.autotask-1}
        confirm-level: 1
        notify-config:
          timeout: 0
          channels: []
        conditions:
          event:
            - signature: Borrow(address,uint256,uint256,uint256)
            - signature: LiquidateBorrow(address,address,uint256,address,uint256)
            - signature: Mint(address,uint256,uint256)
            - signature: Redeem(address,uint256,uint256)
            - signature: RepayBorrow(address,address,uint256,uint256,uint256)
          function: []

plugins:
  - defender-serverless
